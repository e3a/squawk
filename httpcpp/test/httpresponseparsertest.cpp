/*
    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include <array>
#include <string>
#include <tuple>
#include <vector>

#include "http.h"

#include <gtest/gtest.h>


TEST ( HttpResponseParser, ParseSimpleSSDPResponse ) {

	char _request[] = {
		0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31,
		0x20, 0x32, 0x30, 0x30, 0x20, 0x4f, 0x4b, 0x0d,
		0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x2d, 0x43,
		0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x3a, 0x20,
		0x6d, 0x61, 0x78, 0x2d, 0x61, 0x67, 0x65, 0x3d,
		0x31, 0x38, 0x30, 0x30, 0x0d, 0x0a, 0x44, 0x61,
		0x74, 0x65, 0x3a, 0x20, 0x4d, 0x6f, 0x6e, 0x2c,
		0x20, 0x30, 0x36, 0x20, 0x41, 0x70, 0x72, 0x20,
		0x32, 0x30, 0x31, 0x35, 0x20, 0x31, 0x34, 0x3a,
		0x31, 0x34, 0x3a, 0x34, 0x39, 0x20, 0x47, 0x4d,
		0x54, 0x0d, 0x0a, 0x45, 0x78, 0x74, 0x3a, 0x20,
		0x0d, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
		0x6f, 0x6e, 0x3a, 0x20, 0x68, 0x74, 0x74, 0x70,
		0x3a, 0x2f, 0x2f, 0x31, 0x39, 0x32, 0x2e, 0x31,
		0x36, 0x38, 0x2e, 0x30, 0x2e, 0x37, 0x3a, 0x39,
		0x30, 0x30, 0x30, 0x2f, 0x70, 0x6c, 0x75, 0x67,
		0x69, 0x6e, 0x73, 0x2f, 0x55, 0x50, 0x6e, 0x50,
		0x2f, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x65,
		0x72, 0x76, 0x65, 0x72, 0x2e, 0x78, 0x6d, 0x6c,
		0x0d, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
		0x3a, 0x20, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x2f,
		0x78, 0x38, 0x36, 0x5f, 0x36, 0x34, 0x2d, 0x6c,
		0x69, 0x6e, 0x75, 0x78, 0x20, 0x55, 0x50, 0x6e,
		0x50, 0x2f, 0x31, 0x2e, 0x30, 0x20, 0x44, 0x4c,
		0x4e, 0x41, 0x44, 0x4f, 0x43, 0x2f, 0x31, 0x2e,
		0x35, 0x30, 0x20, 0x4c, 0x6f, 0x67, 0x69, 0x74,
		0x65, 0x63, 0x68, 0x4d, 0x65, 0x64, 0x69, 0x61,
		0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x37,
		0x2e, 0x38, 0x2e, 0x30, 0x2f, 0x31, 0x33, 0x39,
		0x35, 0x34, 0x30, 0x39, 0x39, 0x30, 0x37, 0x0d,
		0x0a, 0x53, 0x54, 0x3a, 0x20, 0x75, 0x70, 0x6e,
		0x70, 0x3a, 0x72, 0x6f, 0x6f, 0x74, 0x64, 0x65,
		0x76, 0x69, 0x63, 0x65, 0x0d, 0x0a, 0x55, 0x53,
		0x4e, 0x3a, 0x20, 0x75, 0x75, 0x69, 0x64, 0x3a,
		0x36, 0x43, 0x41, 0x30, 0x46, 0x34, 0x36, 0x43,
		0x2d, 0x37, 0x44, 0x44, 0x44, 0x2d, 0x34, 0x34,
		0x37, 0x36, 0x2d, 0x39, 0x38, 0x46, 0x35, 0x2d,
		0x37, 0x45, 0x36, 0x43, 0x39, 0x38, 0x36, 0x30,
		0x46, 0x34, 0x38, 0x34, 0x3a, 0x3a, 0x75, 0x70,
		0x6e, 0x70, 0x3a, 0x72, 0x6f, 0x6f, 0x74, 0x64,
		0x65, 0x76, 0x69, 0x63, 0x65, 0x0d, 0x0a, 0x0d,
		0x0a
	};

	std::array<char, http::BUFFER_SIZE> request;

	for ( size_t i = 0; i < sizeof ( _request ); i++ ) {
		request[i] = _request[i];
	}

	http::HttpResponse http_response;
	http::HttpResponseParser httpParser;
	size_t state = httpParser.parse_http_response ( http_response, request, sizeof ( _request ) );
	EXPECT_EQ ( sizeof ( _request ), state );
	EXPECT_EQ ( http::http_status::OK, http_response.status() );
	EXPECT_EQ ( "HTTP", http_response.protocol() );
	EXPECT_EQ ( 1, http_response.http_version_major );
	EXPECT_EQ ( 1, http_response.http_version_minor );

	EXPECT_EQ ( "max-age=1800", http_response.parameter ( "Cache-Control" ) );
	EXPECT_EQ ( "Mon, 06 Apr 2015 14:14:49 GMT", http_response.parameter ( "Date" ) );
	EXPECT_EQ ( "", http_response.parameter ( "Ext" ) );
	EXPECT_EQ ( "http://192.168.0.7:9000/plugins/UPnP/MediaServer.xml", http_response.parameter ( "Location" ) );
	EXPECT_EQ ( "Linux/x86_64-linux UPnP/1.0 DLNADOC/1.50 LogitechMediaServer/7.8.0/1395409907", http_response.parameter ( "Server" ) );
	EXPECT_EQ ( "upnp:rootdevice", http_response.parameter ( "St" ) );
	EXPECT_EQ ( "uuid:6CA0F46C-7DDD-4476-98F5-7E6C9860F484::upnp:rootdevice", http_response.parameter ( "Usn" ) );
}
