/*
    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) 2013  <copyright holder> <email>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#include "songhandler.h"

#include <sstream>
#include <fstream>

namespace squawk {
namespace http {
namespace files {

pcrecpp::RE SongHandler::re("/song/(\\d+).(flac|mp3)");

void SongHandler::handle_request(const std::string request_path, const HttpRequest& req, reply& rep, char * buffer) {

  int id=0;
  if(re.PartialMatch(request_path, &id)) {
      std::cout << "search song: " << id << std::endl;
    squawk::model::Song song = dao->getSongById(id);
    std::cout << "found song:" << song.title << ", " << song.filename << std::endl;
    std::string path = song.filename;
    std::ifstream input(path.c_str());
    if ( input ) {      
      std::stringstream sstr;
      while(input >> sstr.rdbuf());
  
      squawk::http::create_reply(rep, squawk::http::reply::ok, sstr.str(), song.mime_type);
      
    } else {
      rep.status = reply::not_found;
    }
  } else {
    rep.status = reply::bad_request;
  }
}
}}}
